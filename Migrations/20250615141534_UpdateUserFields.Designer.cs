// <auto-generated />
using System;
using MarmoreGranito.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MarmoreGranito.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250615141534_UpdateUserFields")]
    partial class UpdateUserFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MarmoreGranito.API.Models.Bloco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("codigo");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<bool>("Disponivel")
                        .HasColumnType("boolean")
                        .HasColumnName("disponivel");

                    b.Property<decimal>("MetragemM3")
                        .HasColumnType("numeric")
                        .HasColumnName("metragem_m3");

                    b.Property<string>("NotaFiscalEntrada")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nota_fiscal_entrada");

                    b.Property<string>("PedreiraOrigem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("pedreira_origem");

                    b.Property<string>("TipoMaterial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("tipo_material");

                    b.Property<decimal>("ValorCompra")
                        .HasColumnType("numeric")
                        .HasColumnName("valor_compra");

                    b.HasKey("Id");

                    b.ToTable("blocos", (string)null);
                });

            modelBuilder.Entity("MarmoreGranito.API.Models.Chapa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BlocoId")
                        .HasColumnType("integer")
                        .HasColumnName("bloco_id");

                    b.Property<decimal>("Comprimento")
                        .HasColumnType("numeric")
                        .HasColumnName("comprimento");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<bool>("Disponivel")
                        .HasColumnType("boolean")
                        .HasColumnName("disponivel");

                    b.Property<decimal>("Espessura")
                        .HasColumnType("numeric")
                        .HasColumnName("espessura");

                    b.Property<decimal>("Largura")
                        .HasColumnType("numeric")
                        .HasColumnName("largura");

                    b.Property<string>("TipoMaterial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("tipo_material");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("numeric")
                        .HasColumnName("valor_unitario");

                    b.HasKey("Id");

                    b.HasIndex("BlocoId");

                    b.ToTable("chapas", (string)null);
                });

            modelBuilder.Entity("MarmoreGranito.API.Models.ProcessoSerragem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BlocoId")
                        .HasColumnType("integer")
                        .HasColumnName("bloco_id");

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_conclusao");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_inicio");

                    b.Property<string>("Observacoes")
                        .HasColumnType("text")
                        .HasColumnName("observacoes");

                    b.Property<int>("QuantidadeChapas")
                        .HasColumnType("integer")
                        .HasColumnName("quantidade_chapas");

                    b.Property<string>("Status")
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("BlocoId");

                    b.ToTable("processo_serragem", (string)null);
                });

            modelBuilder.Entity("MarmoreGranito.API.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_criacao");

                    b.Property<DateTime?>("DataUltimaAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("senha");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("MarmoreGranito.API.Models.Chapa", b =>
                {
                    b.HasOne("MarmoreGranito.API.Models.Bloco", "Bloco")
                        .WithMany("Chapas")
                        .HasForeignKey("BlocoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bloco");
                });

            modelBuilder.Entity("MarmoreGranito.API.Models.ProcessoSerragem", b =>
                {
                    b.HasOne("MarmoreGranito.API.Models.Bloco", "Bloco")
                        .WithMany("ProcessosSerragem")
                        .HasForeignKey("BlocoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bloco");
                });

            modelBuilder.Entity("MarmoreGranito.API.Models.Bloco", b =>
                {
                    b.Navigation("Chapas");

                    b.Navigation("ProcessosSerragem");
                });
#pragma warning restore 612, 618
        }
    }
}
